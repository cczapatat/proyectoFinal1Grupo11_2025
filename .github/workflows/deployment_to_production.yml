name: Deployment to Production
on:
  workflow_dispatch:
    inputs:
        reason:
            description: Reason for deployment
            required: true
        tag:
            description: Tag for deployment
            required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  starting_deploy:
    name: Starting Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Starting Deployment
        run: |
          echo "Starting Deployment - ${{ github.event.inputs.reason }}"
          echo "Tag for deployment - ${{ github.event.inputs.tag }}"
          docker --version
  validate_all_coverage:
    name: Merge On Main After Approved PR.
    needs: starting_deploy
    uses: cczapatat/proyectoFinal1Grupo11_2025/.github/workflows/push_feature_fix_branch.yml@main
    with:
      command: 'run_on_deployment'
  deploy_to_production:
    name: Deployment to Production
    needs: validate_all_coverage
    runs-on: ubuntu-latest
    steps:
      - name: Repository checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup user git
        run: |
          git config user.name "cczapatat"
          git config user.email "c.zapatat@uniandes.edu.co"
      - name: Create credentials.json
        run: |
          echo "Creating credentials.json"
          mkdir -p data_app
          echo ${{ secrets.GCP_CREDENTIALS }} > data_app/credentials.json
      - name: Config GCP
        run: |
          echo "Configuring GCP"
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          echo "GCP SDK installed"
          sudo apt-get install google-cloud-cli
          echo "GCP Authenticating"
          gcloud auth activate-service-account --key-file data_app/credentials.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/zone ${{ secrets.GCP_COMPUTE_ZONE }}
          gcloud config set compute/region ${{ secrets.GCP_COMPUTE_REGION }}
          gcloud auth configure-docker us-central1-docker.pkg.dev
          echo "GCP configured"
      - name: Create Images
        run: |
          echo "Creating Images with tag ${{ github.event.inputs.tag }}"
          sh build-images.sh ${{ github.event.inputs.tag }}
          echo "Listing Images"
          docker images
          echo "Images created"
      - name: Config Kubernetes
        run: |
          echo "Configuring Kubernetes"
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin kubectl
          gcloud container clusters get-credentials ${{ secrets.GCP_CLUSTER_NAME }} --region ${{ secrets.GCP_COMPUTE_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl get namespaces
          echo "Kubernetes configured"
      - name: Deploy to Kubernetes
        run: |
          echo "Deploying to Kubernetes with tag: ${{ github.event.inputs.tag }}"
          tag="${{ github.event.inputs.tag }}"
          cd deployment
          sed -i.bak "s/:latest/:$tag/g" k8s-base-layer-deployment.yaml
          sed -i.bak "s/:fakeKeyOpenApi/:${{ secrets.OPENAI_API_KEY }}/g" secrets.yaml
          kubectl apply -f secrets.yaml
          kubectl apply -f k8s-base-layer-deployment.yaml
          kubectl apply -f k8s-ingress-deployment.yaml
          echo "Deployment completed"
          kubectl get pods
      - name: Create New Tag
        run: |
          echo "Creating new tag - ${{ github.event.inputs.tag }}"
          git fetch
          git checkout main
          git branch --show-current
          git pull
          git tag v${{ github.event.inputs.tag }} HEAD -m "${{ github.event.inputs.reason }}"
          git push origin v${{ github.event.inputs.tag }}